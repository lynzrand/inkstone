Root@0..296
  LF@0..1 "\n"
  BlockScope@1..296
    LetStmt@1..49
      LetKw@1..4 "let"
      WS@4..5 " "
      Name@5..6
        Ident@5..6 "x"
      WS@6..7 " "
      Assign@7..8 "="
      WS@8..9 " "
      IfExpr@9..48
        IfKw@9..11 "if"
        WS@11..12 " "
        IfBranch@12..31
          Condition@12..16
            VarExpr@12..15
              Ident@12..15 "foo"
            Semicolon@15..16 ";"
          BlockScope@16..31
            WS@16..17 " "
            ExprStmt@17..30
              FunctionCallExpr@17..29
                VarExpr@17..19
                  Ident@17..19 "do"
                WS@19..20 " "
                VarExpr@20..29
                  Ident@20..29 "something"
              Semicolon@29..30 ";"
            WS@30..31 " "
        ElseKw@31..35 "else"
        WS@35..36 " "
        IfBranch@36..45
          BlockScope@36..45
            ExprStmt@36..44
              FunctionCallExpr@36..43
                VarExpr@36..40
                  Ident@36..40 "give"
                WS@40..41 " "
                VarExpr@41..43
                  Ident@41..43 "up"
              Semicolon@43..44 ";"
            WS@44..45 " "
        EndKw@45..48 "end"
      LF@48..49 "\n"
    LF@49..50 "\n"
    ExprStmt@50..160
      IfExpr@50..159
        IfKw@50..52 "if"
        WS@52..53 " "
        IfBranch@53..104
          Condition@53..93
            BinaryExpr@53..88
              ParenExpr@53..68
                LParen@53..54 "("
                FunctionCallExpr@54..67
                  DotExpr@54..65
                    VarExpr@54..58
                      Ident@54..58 "Date"
                    Dot@58..59 "."
                    Ident@59..64 "today"
                    WS@64..65 " "
                  TupleLiteralExpr@65..67
                    LParen@65..66 "("
                    RParen@66..67 ")"
                RParen@67..68 ")"
              WS@68..69 " "
              Eq@69..71 "=="
              WS@71..72 " "
              ParenExpr@72..88
                LParen@72..73 "("
                FunctionCallExpr@73..87
                  VarExpr@73..77
                    Ident@73..77 "Date"
                  WS@77..78 " "
                  LiteralExpr@78..82
                    Int@78..82 "2021"
                  WS@82..83 " "
                  LiteralExpr@83..84
                    Int@83..84 "9"
                  WS@84..85 " "
                  LiteralExpr@85..87
                    Int@85..87 "30"
                RParen@87..88 ")"
            LF@88..89 "\n"
            WS@89..93 "    "
          BlockScope@93..104
            ExprStmt@93..104
              FunctionCallExpr@93..103
                VarExpr@93..100
                  Ident@93..100 "wake_up"
                WS@100..101 " "
                VarExpr@101..103
                  Ident@101..103 "me"
              LF@103..104 "\n"
        ElseKw@104..108 "else"
        WS@108..109 " "
        IfKw@109..111 "if"
        WS@111..112 " "
        IfBranch@112..146
          Condition@112..127
            BinaryExpr@112..122
              BinaryExpr@112..118
                LiteralExpr@112..113
                  Int@112..113 "2"
                WS@113..114 " "
                Add@114..115 "+"
                WS@115..116 " "
                LiteralExpr@116..117
                  Int@116..117 "2"
                WS@117..118 " "
              Eq@118..120 "=="
              WS@120..121 " "
              LiteralExpr@121..122
                Int@121..122 "5"
            LF@122..123 "\n"
            WS@123..127 "    "
          BlockScope@127..146
            ExprStmt@127..146
              FunctionCallExpr@127..145
                VarExpr@127..132
                  Ident@127..132 "print"
                WS@132..133 " "
                LiteralExpr@133..145
                  StringLiteral@133..145 "\"It's 1984!\""
              LF@145..146 "\n"
        ElseKw@146..150 "else"
        LF@150..151 "\n"
        WS@151..155 "    "
        LF@155..156 "\n"
        IfBranch@156..156
          BlockScope@156..156
        EndKw@156..159 "end"
      LF@159..160 "\n"
    LF@160..161 "\n"
    LetStmt@161..296
      LetKw@161..164 "let"
      WS@164..165 " "
      Name@165..166
        Ident@165..166 "y"
      WS@166..167 " "
      Assign@167..168 "="
      WS@168..169 " "
      WhileLoopExpr@169..295
        WhileKw@169..174 "while"
        WS@174..175 " "
        Condition@175..179
          LiteralExpr@175..179
            TrueKw@175..179 "true"
        LF@179..180 "\n"
        BlockScope@180..292
          WS@180..184 "    "
          ExprStmt@184..256
            ForLoopExpr@184..255
              ForKw@184..187 "for"
              WS@187..188 " "
              Condition@188..194
                Binding@188..189
                  Ident@188..189 "z"
                WS@189..190 " "
                InKw@190..192 "in"
                WS@192..193 " "
                VarExpr@193..194
                  Ident@193..194 "w"
              LF@194..195 "\n"
              BlockScope@195..252
                WS@195..203 "        "
                ExprStmt@203..248
                  IfExpr@203..247
                    IfKw@203..205 "if"
                    WS@205..206 " "
                    IfBranch@206..244
                      Condition@206..224
                        BinaryExpr@206..211
                          VarExpr@206..207
                            Ident@206..207 "x"
                          WS@207..208 " "
                          Gt@208..209 ">"
                          WS@209..210 " "
                          LiteralExpr@210..211
                            Int@210..211 "0"
                        LF@211..212 "\n"
                        WS@212..224 "            "
                      BlockScope@224..244
                        ExprStmt@224..236
                          BreakExpr@224..235
                            BreakKw@224..229 "break"
                            WS@229..230 " "
                            LiteralExpr@230..235
                              Int@230..235 "12345"
                          LF@235..236 "\n"
                        WS@236..244 "        "
                    EndKw@244..247 "end"
                  LF@247..248 "\n"
                WS@248..252 "    "
              EndKw@252..255 "end"
            LF@255..256 "\n"
          WS@256..260 "    "
          ExprStmt@260..292
            IfExpr@260..291
              IfKw@260..262 "if"
              WS@262..263 " "
              IfBranch@263..288
                Condition@263..278
                  BinaryExpr@263..269
                    VarExpr@263..264
                      Ident@263..264 "w"
                    WS@264..265 " "
                    Eq@265..267 "=="
                    WS@267..268 " "
                    LiteralExpr@268..269
                      Int@268..269 "5"
                  LF@269..270 "\n"
                  WS@270..278 "        "
                BlockScope@278..288
                  ExprStmt@278..284
                    BreakExpr@278..283
                      BreakKw@278..283 "break"
                    LF@283..284 "\n"
                  WS@284..288 "    "
              EndKw@288..291 "end"
            LF@291..292 "\n"
        EndKw@292..295 "end"
      LF@295..296 "\n"

